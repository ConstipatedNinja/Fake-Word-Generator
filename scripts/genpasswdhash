#!/usr/bin/perl

use strict;
use Sys::Hostname;


sub showUsage {
	print "Usage:  sudo_passwd <username>\n\n";
	print "This program must be run as root\n";

	# If we're here, there's nothing more to do, so go ahead and quit.
	exit 0;
}

my $username = $ARGV[0];

unless ( $#ARGV == 0 ) {
	warn "You must specify a user\n";
	showUsage;
}

my $password1='one';
my $password2='two';
# For the sake of paranoia, disable echoing. This will break if we try
# to run this on another platform, but we can cross that bridge when/if
# we ever get there. The other option is to install Term::ReadKey from
# CPAN. For now, this works WellEnough[tm].
system("stty -echo -icanon");
while ( $password1 ne $password2 ) {
	print "Please enter the new password:\n";
	chomp($password1 = <STDIN>);
	print "Please re-enter the new password:\n";
	chomp($password2 = <STDIN>);
}
# It's safe to echo again.
system("stty echo icanon");

# Generate a random salt
my $salt;
my @salt_letters = ('A' .. 'Z', 'a' .. 'z', '0' .. '9', '/', '.');
my $i;
for ( $i=0; $i<=8; $i++ ) {
	$salt .= $salt_letters[rand@salt_letters];
}
$salt = join('', '$1$', $salt, '$');
# Hash the password
my $hashed_password = crypt("$password1", $salt);
print "Your hash: $hashed_password \n";
exit
